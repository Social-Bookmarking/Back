plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sonkim'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	// QueryDSl과 관련된 라이브러리들이 컴파일 시점에만 필요하도록 설정
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.apache.commons:commons-lang3:3.18.0'
	implementation 'org.apache.commons:commons-text:1.14.0'
	implementation 'org.apache.commons:commons-pool2:2.12.1'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// OpenGraph
	implementation 'org.seleniumhq.selenium:selenium-java:4.35.0'
	implementation 'org.jsoup:jsoup:1.17.2'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// QR코드 생성
	implementation 'com.google.zxing:core:3.5.3'
	implementation 'com.google.zxing:javase:3.5.3'

	// Google API Client & Youtube Data API
	implementation 'com.google.api-client:google-api-client:2.8.1'
	implementation 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0'

	// S3
	implementation 'software.amazon.awssdk:s3:2.32.27'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// QueryDSL
	implementation 'io.github.openfeign.querydsl:querydsl-jpa:7.0'
	annotationProcessor 'io.github.openfeign.querydsl:querydsl-apt:7.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
}

// Q-Class를 생성할 디렉토리 경로
def queryDslSrcDir = 'src/main/generated/querydsl/'

// 빌드 시 생성될 소스코드의 출력 디렉토리 설정
tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(queryDslSrcDir))
}

// 소스 코드로 인식할 디렉토리 경로에 Q-Class 파일 추가
sourceSets {
	main.java.srcDirs += [queryDslSrcDir]
}

// 클린 작업 수행 시 Q-Class도 삭제하도록 설정
clean {
	delete file(queryDslSrcDir)
}

tasks.named('test') {
	useJUnitPlatform()
}
